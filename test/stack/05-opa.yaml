---
apiVersion: v1
kind: ConfigMap
metadata:
  name: test
  labels:
    opa.stackable.tech/bundle: "hdfs-group-mapping"
data:
  test.rego: |
    package hdfs

    # this will return the group data in this form:
    #    "result": {
    #        "groups": [
    #            "/admin",
    #            "/superuser"
    #        ]
    #        ...
    groups := users_by_name[input.username].groups

    # returning data in the form presented by the UIF
    users_by_name := {
        "alice": {
            "id": "af07f12c-1234-40a7-93e0-874537bdf3f5",
            "username": "alice",
            "groups": ["/superset-admin"],
            "customAttributes": {},
        },
        "bob": {
            "id": "af07f12c-2345-40a7-93e0-874537bdf3f5",
            "username": "bob",
            "groups": ["/admin"],
            "customAttributes": {},
        },
        "stackable": {
            "id": "af07f12c-3456-40a7-93e0-874537bdf3f5",
            "username": "stackable",
            "groups": ["/admin", "/superuser"],
            "customAttributes": {},
        },
    # Hadoop will use the short-name for group mappings
        "nn": {
            "id": "af07f12c-7890-40a7-93e0-874537bdf3f5",
            "username": "nn",
            "groups": ["/admin", "/superuser"],
            "customAttributes": {},
        },
    }

---
apiVersion: opa.stackable.tech/v1alpha1
kind: OpaCluster
metadata:
  name: test-opa
spec:
  image:
    productVersion: 0.57.0
    pullPolicy: IfNotPresent
  servers:
    roleGroups:
      default: {}